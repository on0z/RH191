// Code generated by MockGen. DO NOT EDIT.
// Source: /home/pi/RH191/rh191.go

// Package mock_librh191 is a generated GoMock package.
package mock_librh191

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/on0z/RH191/v2/types"
)

// MockRH191API is a mock of RH191API interface.
type MockRH191API struct {
	ctrl     *gomock.Controller
	recorder *MockRH191APIMockRecorder
}

// MockRH191APIMockRecorder is the mock recorder for MockRH191API.
type MockRH191APIMockRecorder struct {
	mock *MockRH191API
}

// NewMockRH191API creates a new mock instance.
func NewMockRH191API(ctrl *gomock.Controller) *MockRH191API {
	mock := &MockRH191API{ctrl: ctrl}
	mock.recorder = &MockRH191APIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRH191API) EXPECT() *MockRH191APIMockRecorder {
	return m.recorder
}

// GetBinary mocks base method.
func (m *MockRH191API) GetBinary(config types.CommandConfig) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBinary", config)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBinary indicates an expected call of GetBinary.
func (mr *MockRH191APIMockRecorder) GetBinary(config interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBinary", reflect.TypeOf((*MockRH191API)(nil).GetBinary), config)
}

// GetHex mocks base method.
func (m *MockRH191API) GetHex(config types.CommandConfig) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHex", config)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHex indicates an expected call of GetHex.
func (mr *MockRH191APIMockRecorder) GetHex(config interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHex", reflect.TypeOf((*MockRH191API)(nil).GetHex), config)
}
